// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module polarFir_complexFIR (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        m_axi_realIn_AWVALID,
        m_axi_realIn_AWREADY,
        m_axi_realIn_AWADDR,
        m_axi_realIn_AWID,
        m_axi_realIn_AWLEN,
        m_axi_realIn_AWSIZE,
        m_axi_realIn_AWBURST,
        m_axi_realIn_AWLOCK,
        m_axi_realIn_AWCACHE,
        m_axi_realIn_AWPROT,
        m_axi_realIn_AWQOS,
        m_axi_realIn_AWREGION,
        m_axi_realIn_AWUSER,
        m_axi_realIn_WVALID,
        m_axi_realIn_WREADY,
        m_axi_realIn_WDATA,
        m_axi_realIn_WSTRB,
        m_axi_realIn_WLAST,
        m_axi_realIn_WID,
        m_axi_realIn_WUSER,
        m_axi_realIn_ARVALID,
        m_axi_realIn_ARREADY,
        m_axi_realIn_ARADDR,
        m_axi_realIn_ARID,
        m_axi_realIn_ARLEN,
        m_axi_realIn_ARSIZE,
        m_axi_realIn_ARBURST,
        m_axi_realIn_ARLOCK,
        m_axi_realIn_ARCACHE,
        m_axi_realIn_ARPROT,
        m_axi_realIn_ARQOS,
        m_axi_realIn_ARREGION,
        m_axi_realIn_ARUSER,
        m_axi_realIn_RVALID,
        m_axi_realIn_RREADY,
        m_axi_realIn_RDATA,
        m_axi_realIn_RLAST,
        m_axi_realIn_RID,
        m_axi_realIn_RFIFONUM,
        m_axi_realIn_RUSER,
        m_axi_realIn_RRESP,
        m_axi_realIn_BVALID,
        m_axi_realIn_BREADY,
        m_axi_realIn_BRESP,
        m_axi_realIn_BID,
        m_axi_realIn_BUSER,
        inputReal,
        m_axi_imgIn_AWVALID,
        m_axi_imgIn_AWREADY,
        m_axi_imgIn_AWADDR,
        m_axi_imgIn_AWID,
        m_axi_imgIn_AWLEN,
        m_axi_imgIn_AWSIZE,
        m_axi_imgIn_AWBURST,
        m_axi_imgIn_AWLOCK,
        m_axi_imgIn_AWCACHE,
        m_axi_imgIn_AWPROT,
        m_axi_imgIn_AWQOS,
        m_axi_imgIn_AWREGION,
        m_axi_imgIn_AWUSER,
        m_axi_imgIn_WVALID,
        m_axi_imgIn_WREADY,
        m_axi_imgIn_WDATA,
        m_axi_imgIn_WSTRB,
        m_axi_imgIn_WLAST,
        m_axi_imgIn_WID,
        m_axi_imgIn_WUSER,
        m_axi_imgIn_ARVALID,
        m_axi_imgIn_ARREADY,
        m_axi_imgIn_ARADDR,
        m_axi_imgIn_ARID,
        m_axi_imgIn_ARLEN,
        m_axi_imgIn_ARSIZE,
        m_axi_imgIn_ARBURST,
        m_axi_imgIn_ARLOCK,
        m_axi_imgIn_ARCACHE,
        m_axi_imgIn_ARPROT,
        m_axi_imgIn_ARQOS,
        m_axi_imgIn_ARREGION,
        m_axi_imgIn_ARUSER,
        m_axi_imgIn_RVALID,
        m_axi_imgIn_RREADY,
        m_axi_imgIn_RDATA,
        m_axi_imgIn_RLAST,
        m_axi_imgIn_RID,
        m_axi_imgIn_RFIFONUM,
        m_axi_imgIn_RUSER,
        m_axi_imgIn_RRESP,
        m_axi_imgIn_BVALID,
        m_axi_imgIn_BREADY,
        m_axi_imgIn_BRESP,
        m_axi_imgIn_BID,
        m_axi_imgIn_BUSER,
        inputImg,
        realStream2_din,
        realStream2_num_data_valid,
        realStream2_fifo_cap,
        realStream2_full_n,
        realStream2_write,
        imgStream3_din,
        imgStream3_num_data_valid,
        imgStream3_fifo_cap,
        imgStream3_full_n,
        imgStream3_write,
        filterLength,
        inputLength_c_din,
        inputLength_c_num_data_valid,
        inputLength_c_fifo_cap,
        inputLength_c_full_n,
        inputLength_c_write
);

parameter    ap_ST_fsm_state1 = 42'd1;
parameter    ap_ST_fsm_state2 = 42'd2;
parameter    ap_ST_fsm_state3 = 42'd4;
parameter    ap_ST_fsm_state4 = 42'd8;
parameter    ap_ST_fsm_state5 = 42'd16;
parameter    ap_ST_fsm_state6 = 42'd32;
parameter    ap_ST_fsm_state7 = 42'd64;
parameter    ap_ST_fsm_state8 = 42'd128;
parameter    ap_ST_fsm_state9 = 42'd256;
parameter    ap_ST_fsm_state10 = 42'd512;
parameter    ap_ST_fsm_state11 = 42'd1024;
parameter    ap_ST_fsm_state12 = 42'd2048;
parameter    ap_ST_fsm_state13 = 42'd4096;
parameter    ap_ST_fsm_state14 = 42'd8192;
parameter    ap_ST_fsm_state15 = 42'd16384;
parameter    ap_ST_fsm_state16 = 42'd32768;
parameter    ap_ST_fsm_state17 = 42'd65536;
parameter    ap_ST_fsm_state18 = 42'd131072;
parameter    ap_ST_fsm_state19 = 42'd262144;
parameter    ap_ST_fsm_state20 = 42'd524288;
parameter    ap_ST_fsm_state21 = 42'd1048576;
parameter    ap_ST_fsm_state22 = 42'd2097152;
parameter    ap_ST_fsm_state23 = 42'd4194304;
parameter    ap_ST_fsm_state24 = 42'd8388608;
parameter    ap_ST_fsm_state25 = 42'd16777216;
parameter    ap_ST_fsm_state26 = 42'd33554432;
parameter    ap_ST_fsm_state27 = 42'd67108864;
parameter    ap_ST_fsm_state28 = 42'd134217728;
parameter    ap_ST_fsm_state29 = 42'd268435456;
parameter    ap_ST_fsm_state30 = 42'd536870912;
parameter    ap_ST_fsm_state31 = 42'd1073741824;
parameter    ap_ST_fsm_state32 = 42'd2147483648;
parameter    ap_ST_fsm_state33 = 42'd4294967296;
parameter    ap_ST_fsm_state34 = 42'd8589934592;
parameter    ap_ST_fsm_state35 = 42'd17179869184;
parameter    ap_ST_fsm_state36 = 42'd34359738368;
parameter    ap_ST_fsm_state37 = 42'd68719476736;
parameter    ap_ST_fsm_state38 = 42'd137438953472;
parameter    ap_ST_fsm_state39 = 42'd274877906944;
parameter    ap_ST_fsm_state40 = 42'd549755813888;
parameter    ap_ST_fsm_state41 = 42'd1099511627776;
parameter    ap_ST_fsm_state42 = 42'd2199023255552;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   m_axi_realIn_AWVALID;
input   m_axi_realIn_AWREADY;
output  [63:0] m_axi_realIn_AWADDR;
output  [0:0] m_axi_realIn_AWID;
output  [31:0] m_axi_realIn_AWLEN;
output  [2:0] m_axi_realIn_AWSIZE;
output  [1:0] m_axi_realIn_AWBURST;
output  [1:0] m_axi_realIn_AWLOCK;
output  [3:0] m_axi_realIn_AWCACHE;
output  [2:0] m_axi_realIn_AWPROT;
output  [3:0] m_axi_realIn_AWQOS;
output  [3:0] m_axi_realIn_AWREGION;
output  [0:0] m_axi_realIn_AWUSER;
output   m_axi_realIn_WVALID;
input   m_axi_realIn_WREADY;
output  [31:0] m_axi_realIn_WDATA;
output  [3:0] m_axi_realIn_WSTRB;
output   m_axi_realIn_WLAST;
output  [0:0] m_axi_realIn_WID;
output  [0:0] m_axi_realIn_WUSER;
output   m_axi_realIn_ARVALID;
input   m_axi_realIn_ARREADY;
output  [63:0] m_axi_realIn_ARADDR;
output  [0:0] m_axi_realIn_ARID;
output  [31:0] m_axi_realIn_ARLEN;
output  [2:0] m_axi_realIn_ARSIZE;
output  [1:0] m_axi_realIn_ARBURST;
output  [1:0] m_axi_realIn_ARLOCK;
output  [3:0] m_axi_realIn_ARCACHE;
output  [2:0] m_axi_realIn_ARPROT;
output  [3:0] m_axi_realIn_ARQOS;
output  [3:0] m_axi_realIn_ARREGION;
output  [0:0] m_axi_realIn_ARUSER;
input   m_axi_realIn_RVALID;
output   m_axi_realIn_RREADY;
input  [31:0] m_axi_realIn_RDATA;
input   m_axi_realIn_RLAST;
input  [0:0] m_axi_realIn_RID;
input  [8:0] m_axi_realIn_RFIFONUM;
input  [0:0] m_axi_realIn_RUSER;
input  [1:0] m_axi_realIn_RRESP;
input   m_axi_realIn_BVALID;
output   m_axi_realIn_BREADY;
input  [1:0] m_axi_realIn_BRESP;
input  [0:0] m_axi_realIn_BID;
input  [0:0] m_axi_realIn_BUSER;
input  [63:0] inputReal;
output   m_axi_imgIn_AWVALID;
input   m_axi_imgIn_AWREADY;
output  [63:0] m_axi_imgIn_AWADDR;
output  [0:0] m_axi_imgIn_AWID;
output  [31:0] m_axi_imgIn_AWLEN;
output  [2:0] m_axi_imgIn_AWSIZE;
output  [1:0] m_axi_imgIn_AWBURST;
output  [1:0] m_axi_imgIn_AWLOCK;
output  [3:0] m_axi_imgIn_AWCACHE;
output  [2:0] m_axi_imgIn_AWPROT;
output  [3:0] m_axi_imgIn_AWQOS;
output  [3:0] m_axi_imgIn_AWREGION;
output  [0:0] m_axi_imgIn_AWUSER;
output   m_axi_imgIn_WVALID;
input   m_axi_imgIn_WREADY;
output  [31:0] m_axi_imgIn_WDATA;
output  [3:0] m_axi_imgIn_WSTRB;
output   m_axi_imgIn_WLAST;
output  [0:0] m_axi_imgIn_WID;
output  [0:0] m_axi_imgIn_WUSER;
output   m_axi_imgIn_ARVALID;
input   m_axi_imgIn_ARREADY;
output  [63:0] m_axi_imgIn_ARADDR;
output  [0:0] m_axi_imgIn_ARID;
output  [31:0] m_axi_imgIn_ARLEN;
output  [2:0] m_axi_imgIn_ARSIZE;
output  [1:0] m_axi_imgIn_ARBURST;
output  [1:0] m_axi_imgIn_ARLOCK;
output  [3:0] m_axi_imgIn_ARCACHE;
output  [2:0] m_axi_imgIn_ARPROT;
output  [3:0] m_axi_imgIn_ARQOS;
output  [3:0] m_axi_imgIn_ARREGION;
output  [0:0] m_axi_imgIn_ARUSER;
input   m_axi_imgIn_RVALID;
output   m_axi_imgIn_RREADY;
input  [31:0] m_axi_imgIn_RDATA;
input   m_axi_imgIn_RLAST;
input  [0:0] m_axi_imgIn_RID;
input  [8:0] m_axi_imgIn_RFIFONUM;
input  [0:0] m_axi_imgIn_RUSER;
input  [1:0] m_axi_imgIn_RRESP;
input   m_axi_imgIn_BVALID;
output   m_axi_imgIn_BREADY;
input  [1:0] m_axi_imgIn_BRESP;
input  [0:0] m_axi_imgIn_BID;
input  [0:0] m_axi_imgIn_BUSER;
input  [63:0] inputImg;
output  [17:0] realStream2_din;
input  [1:0] realStream2_num_data_valid;
input  [1:0] realStream2_fifo_cap;
input   realStream2_full_n;
output   realStream2_write;
output  [17:0] imgStream3_din;
input  [1:0] imgStream3_num_data_valid;
input  [1:0] imgStream3_fifo_cap;
input   imgStream3_full_n;
output   imgStream3_write;
input  [31:0] filterLength;
output  [31:0] inputLength_c_din;
input  [1:0] inputLength_c_num_data_valid;
input  [1:0] inputLength_c_fifo_cap;
input   inputLength_c_full_n;
output   inputLength_c_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_realIn_ARVALID;
reg[63:0] m_axi_realIn_ARADDR;
reg[31:0] m_axi_realIn_ARLEN;
reg m_axi_realIn_RREADY;
reg m_axi_imgIn_ARVALID;
reg[63:0] m_axi_imgIn_ARADDR;
reg[31:0] m_axi_imgIn_ARLEN;
reg m_axi_imgIn_RREADY;
reg realStream2_write;
reg imgStream3_write;
reg inputLength_c_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [41:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    realIn_blk_n_AR;
reg    realIn_blk_n_R;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state41;
reg    imgIn_blk_n_AR;
reg    imgIn_blk_n_R;
reg    realStream2_blk_n;
wire    ap_CS_fsm_state42;
reg    imgStream3_blk_n;
reg    inputLength_c_blk_n;
wire   [5:0] kernelReal_V_fu_471_p1;
reg   [5:0] kernelReal_V_reg_820;
wire   [5:0] kernelImg_V_fu_475_p1;
reg   [5:0] kernelImg_V_reg_825;
wire   [5:0] kernelReal_V_1_fu_479_p1;
reg   [5:0] kernelReal_V_1_reg_830;
wire   [5:0] kernelImg_V_1_fu_483_p1;
reg   [5:0] kernelImg_V_1_reg_835;
wire   [5:0] kernelReal_V_2_fu_487_p1;
reg   [5:0] kernelReal_V_2_reg_840;
wire   [5:0] kernelImg_V_2_fu_491_p1;
reg   [5:0] kernelImg_V_2_reg_845;
wire   [5:0] kernelReal_V_3_fu_495_p1;
reg   [5:0] kernelReal_V_3_reg_850;
wire   [5:0] kernelImg_V_3_fu_499_p1;
reg   [5:0] kernelImg_V_3_reg_855;
wire   [5:0] kernelReal_V_4_fu_503_p1;
reg   [5:0] kernelReal_V_4_reg_860;
wire   [5:0] kernelImg_V_4_fu_507_p1;
reg   [5:0] kernelImg_V_4_reg_865;
wire   [5:0] kernelReal_V_5_fu_511_p1;
reg   [5:0] kernelReal_V_5_reg_870;
wire   [5:0] kernelImg_V_5_fu_515_p1;
reg   [5:0] kernelImg_V_5_reg_875;
wire   [5:0] kernelReal_V_6_fu_519_p1;
reg   [5:0] kernelReal_V_6_reg_880;
wire   [5:0] kernelImg_V_6_fu_523_p1;
reg   [5:0] kernelImg_V_6_reg_885;
wire   [5:0] kernelReal_V_7_fu_527_p1;
reg   [5:0] kernelReal_V_7_reg_890;
wire   [5:0] kernelImg_V_7_fu_531_p1;
reg   [5:0] kernelImg_V_7_reg_895;
wire   [5:0] kernelReal_V_8_fu_535_p1;
reg   [5:0] kernelReal_V_8_reg_900;
wire   [5:0] kernelImg_V_8_fu_539_p1;
reg   [5:0] kernelImg_V_8_reg_905;
wire   [5:0] kernelReal_V_9_fu_543_p1;
reg   [5:0] kernelReal_V_9_reg_910;
wire   [5:0] kernelImg_V_9_fu_547_p1;
reg   [5:0] kernelImg_V_9_reg_915;
wire   [5:0] kernelReal_V_10_fu_551_p1;
reg   [5:0] kernelReal_V_10_reg_920;
wire   [5:0] kernelImg_V_10_fu_555_p1;
reg   [5:0] kernelImg_V_10_reg_925;
wire   [5:0] kernelReal_V_11_fu_559_p1;
reg   [5:0] kernelReal_V_11_reg_930;
wire   [5:0] kernelImg_V_11_fu_563_p1;
reg   [5:0] kernelImg_V_11_reg_935;
wire   [5:0] kernelReal_V_12_fu_567_p1;
reg   [5:0] kernelReal_V_12_reg_940;
wire   [5:0] kernelImg_V_12_fu_571_p1;
reg   [5:0] kernelImg_V_12_reg_945;
wire   [5:0] kernelReal_V_13_fu_575_p1;
reg   [5:0] kernelReal_V_13_reg_950;
wire   [5:0] kernelImg_V_13_fu_579_p1;
reg   [5:0] kernelImg_V_13_reg_955;
wire   [5:0] kernelReal_V_14_fu_583_p1;
reg   [5:0] kernelReal_V_14_reg_960;
wire   [5:0] kernelImg_V_14_fu_587_p1;
reg   [5:0] kernelImg_V_14_reg_965;
wire   [5:0] kernelReal_V_15_fu_591_p1;
reg   [5:0] kernelReal_V_15_reg_970;
wire   [5:0] kernelImg_V_15_fu_595_p1;
reg   [5:0] kernelImg_V_15_reg_975;
wire   [5:0] kernelReal_V_16_fu_599_p1;
reg   [5:0] kernelReal_V_16_reg_980;
wire   [5:0] kernelImg_V_16_fu_603_p1;
reg   [5:0] kernelImg_V_16_reg_985;
wire   [5:0] kernelReal_V_17_fu_607_p1;
reg   [5:0] kernelReal_V_17_reg_990;
wire   [5:0] kernelImg_V_17_fu_611_p1;
reg   [5:0] kernelImg_V_17_reg_995;
wire   [5:0] kernelReal_V_18_fu_615_p1;
reg   [5:0] kernelReal_V_18_reg_1000;
wire   [5:0] kernelImg_V_18_fu_619_p1;
reg   [5:0] kernelImg_V_18_reg_1005;
wire   [5:0] kernelReal_V_19_fu_623_p1;
reg   [5:0] kernelReal_V_19_reg_1010;
wire   [5:0] kernelImg_V_19_fu_627_p1;
reg   [5:0] kernelImg_V_19_reg_1015;
wire   [5:0] kernelReal_V_20_fu_631_p1;
reg   [5:0] kernelReal_V_20_reg_1020;
wire   [5:0] kernelImg_V_20_fu_635_p1;
reg   [5:0] kernelImg_V_20_reg_1025;
wire   [5:0] kernelReal_V_21_fu_639_p1;
reg   [5:0] kernelReal_V_21_reg_1030;
wire   [5:0] kernelImg_V_21_fu_643_p1;
reg   [5:0] kernelImg_V_21_reg_1035;
wire   [5:0] kernelReal_V_22_fu_647_p1;
reg   [5:0] kernelReal_V_22_reg_1040;
wire   [5:0] kernelImg_V_22_fu_651_p1;
reg   [5:0] kernelImg_V_22_reg_1045;
wire   [5:0] kernelReal_V_23_fu_655_p1;
reg   [5:0] kernelReal_V_23_reg_1050;
wire   [5:0] kernelImg_V_23_fu_659_p1;
reg   [5:0] kernelImg_V_23_reg_1055;
wire   [5:0] kernelReal_V_24_fu_663_p1;
reg   [5:0] kernelReal_V_24_reg_1060;
wire   [5:0] kernelImg_V_24_fu_667_p1;
reg   [5:0] kernelImg_V_24_reg_1065;
reg   [63:0] realIn_addr_1_reg_1073;
wire    ap_CS_fsm_state33;
wire   [0:0] icmp_ln78_fu_678_p2;
reg   [63:0] imgIn_addr_1_reg_1079;
wire   [5:0] inTempReal_V_fu_766_p1;
reg   [5:0] inTempReal_V_reg_1085;
wire   [5:0] inTempImg_V_fu_771_p1;
reg   [5:0] inTempImg_V_reg_1090;
wire    grp_computeComplexFIR_fu_272_ap_start;
wire    grp_computeComplexFIR_fu_272_ap_done;
wire    grp_computeComplexFIR_fu_272_ap_idle;
wire    grp_computeComplexFIR_fu_272_ap_ready;
wire   [17:0] grp_computeComplexFIR_fu_272_ap_return_0;
wire   [17:0] grp_computeComplexFIR_fu_272_ap_return_1;
reg    grp_computeComplexFIR_fu_272_ap_start_reg;
reg    ap_block_state41_ignore_call19;
reg    ap_block_state42_ignore_call19;
wire  signed [63:0] sext_ln57_fu_434_p1;
wire  signed [63:0] sext_ln58_fu_455_p1;
wire  signed [63:0] sext_ln81_fu_726_p1;
wire  signed [63:0] sext_ln82_fu_751_p1;
reg    ap_block_state1;
reg    ap_block_state1_io;
reg    ap_block_state8;
reg    ap_block_state9;
reg    ap_block_state10;
reg    ap_block_state11;
reg    ap_block_state12;
reg    ap_block_state13;
reg    ap_block_state14;
reg    ap_block_state15;
reg    ap_block_state16;
reg    ap_block_state17;
reg    ap_block_state18;
reg    ap_block_state19;
reg    ap_block_state20;
reg    ap_block_state21;
reg    ap_block_state22;
reg    ap_block_state23;
reg    ap_block_state24;
reg    ap_block_state25;
reg    ap_block_state26;
reg    ap_block_state27;
reg    ap_block_state28;
reg    ap_block_state29;
reg    ap_block_state30;
reg    ap_block_state31;
reg    ap_block_state32;
reg    ap_block_state34_io;
reg    ap_block_state41;
reg   [30:0] k_fu_180;
wire   [30:0] add_ln78_fu_683_p2;
reg    ap_block_state42;
wire   [61:0] trunc_ln_fu_424_p4;
wire   [61:0] trunc_ln1_fu_445_p4;
wire   [31:0] zext_ln78_fu_674_p1;
wire   [32:0] shl_ln_fu_689_p3;
wire   [33:0] zext_ln81_fu_697_p1;
wire   [33:0] add_ln81_fu_701_p2;
wire   [63:0] zext_ln81_1_fu_707_p1;
wire   [63:0] add_ln81_1_fu_711_p2;
wire   [61:0] trunc_ln2_fu_716_p4;
wire   [63:0] add_ln82_fu_736_p2;
wire   [61:0] trunc_ln3_fu_741_p4;
reg   [41:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
reg    ap_ST_fsm_state12_blk;
reg    ap_ST_fsm_state13_blk;
reg    ap_ST_fsm_state14_blk;
reg    ap_ST_fsm_state15_blk;
reg    ap_ST_fsm_state16_blk;
reg    ap_ST_fsm_state17_blk;
reg    ap_ST_fsm_state18_blk;
reg    ap_ST_fsm_state19_blk;
reg    ap_ST_fsm_state20_blk;
reg    ap_ST_fsm_state21_blk;
reg    ap_ST_fsm_state22_blk;
reg    ap_ST_fsm_state23_blk;
reg    ap_ST_fsm_state24_blk;
reg    ap_ST_fsm_state25_blk;
reg    ap_ST_fsm_state26_blk;
reg    ap_ST_fsm_state27_blk;
reg    ap_ST_fsm_state28_blk;
reg    ap_ST_fsm_state29_blk;
reg    ap_ST_fsm_state30_blk;
reg    ap_ST_fsm_state31_blk;
reg    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
reg    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
reg    ap_ST_fsm_state41_blk;
reg    ap_ST_fsm_state42_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 42'd1;
#0 grp_computeComplexFIR_fu_272_ap_start_reg = 1'b0;
end

polarFir_computeComplexFIR grp_computeComplexFIR_fu_272(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_computeComplexFIR_fu_272_ap_start),
    .ap_done(grp_computeComplexFIR_fu_272_ap_done),
    .ap_idle(grp_computeComplexFIR_fu_272_ap_idle),
    .ap_ready(grp_computeComplexFIR_fu_272_ap_ready),
    .inputReal(inTempReal_V_reg_1085),
    .inputImg(inTempImg_V_reg_1090),
    .p_read(kernelReal_V_reg_820),
    .p_read1(kernelReal_V_1_reg_830),
    .p_read2(kernelReal_V_2_reg_840),
    .p_read3(kernelReal_V_3_reg_850),
    .p_read4(kernelReal_V_4_reg_860),
    .p_read5(kernelReal_V_5_reg_870),
    .p_read6(kernelReal_V_6_reg_880),
    .p_read7(kernelReal_V_7_reg_890),
    .p_read8(kernelReal_V_8_reg_900),
    .p_read9(kernelReal_V_9_reg_910),
    .p_read10(kernelReal_V_10_reg_920),
    .p_read11(kernelReal_V_11_reg_930),
    .p_read12(kernelReal_V_12_reg_940),
    .p_read13(kernelReal_V_13_reg_950),
    .p_read14(kernelReal_V_14_reg_960),
    .p_read15(kernelReal_V_15_reg_970),
    .p_read16(kernelReal_V_16_reg_980),
    .p_read17(kernelReal_V_17_reg_990),
    .p_read18(kernelReal_V_18_reg_1000),
    .p_read19(kernelReal_V_19_reg_1010),
    .p_read20(kernelReal_V_20_reg_1020),
    .p_read21(kernelReal_V_21_reg_1030),
    .p_read22(kernelReal_V_22_reg_1040),
    .p_read23(kernelReal_V_23_reg_1050),
    .p_read24(kernelReal_V_24_reg_1060),
    .p_read25(kernelImg_V_reg_825),
    .p_read26(kernelImg_V_1_reg_835),
    .p_read27(kernelImg_V_2_reg_845),
    .p_read28(kernelImg_V_3_reg_855),
    .p_read29(kernelImg_V_4_reg_865),
    .p_read30(kernelImg_V_5_reg_875),
    .p_read31(kernelImg_V_6_reg_885),
    .p_read32(kernelImg_V_7_reg_895),
    .p_read33(kernelImg_V_8_reg_905),
    .p_read34(kernelImg_V_9_reg_915),
    .p_read35(kernelImg_V_10_reg_925),
    .p_read36(kernelImg_V_11_reg_935),
    .p_read37(kernelImg_V_12_reg_945),
    .p_read38(kernelImg_V_13_reg_955),
    .p_read39(kernelImg_V_14_reg_965),
    .p_read40(kernelImg_V_15_reg_975),
    .p_read41(kernelImg_V_16_reg_985),
    .p_read42(kernelImg_V_17_reg_995),
    .p_read43(kernelImg_V_18_reg_1005),
    .p_read44(kernelImg_V_19_reg_1015),
    .p_read45(kernelImg_V_20_reg_1025),
    .p_read46(kernelImg_V_21_reg_1035),
    .p_read47(kernelImg_V_22_reg_1045),
    .p_read48(kernelImg_V_23_reg_1055),
    .p_read49(kernelImg_V_24_reg_1065),
    .ap_return_0(grp_computeComplexFIR_fu_272_ap_return_0),
    .ap_return_1(grp_computeComplexFIR_fu_272_ap_return_1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln78_fu_678_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state33))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_computeComplexFIR_fu_272_ap_start_reg <= 1'b0;
    end else begin
        if ((~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state41))) begin
            grp_computeComplexFIR_fu_272_ap_start_reg <= 1'b1;
        end else if ((grp_computeComplexFIR_fu_272_ap_ready == 1'b1)) begin
            grp_computeComplexFIR_fu_272_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state1_io) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (inputLength_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        k_fu_180 <= 31'd0;
    end else if (((icmp_ln78_fu_678_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
        k_fu_180 <= add_ln78_fu_683_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_fu_678_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
        imgIn_addr_1_reg_1079 <= sext_ln82_fu_751_p1;
        realIn_addr_1_reg_1073 <= sext_ln81_fu_726_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        inTempImg_V_reg_1090 <= inTempImg_V_fu_771_p1;
        inTempReal_V_reg_1085 <= inTempReal_V_fu_766_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        kernelImg_V_10_reg_925 <= kernelImg_V_10_fu_555_p1;
        kernelReal_V_10_reg_920 <= kernelReal_V_10_fu_551_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        kernelImg_V_11_reg_935 <= kernelImg_V_11_fu_563_p1;
        kernelReal_V_11_reg_930 <= kernelReal_V_11_fu_559_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        kernelImg_V_12_reg_945 <= kernelImg_V_12_fu_571_p1;
        kernelReal_V_12_reg_940 <= kernelReal_V_12_fu_567_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        kernelImg_V_13_reg_955 <= kernelImg_V_13_fu_579_p1;
        kernelReal_V_13_reg_950 <= kernelReal_V_13_fu_575_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        kernelImg_V_14_reg_965 <= kernelImg_V_14_fu_587_p1;
        kernelReal_V_14_reg_960 <= kernelReal_V_14_fu_583_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        kernelImg_V_15_reg_975 <= kernelImg_V_15_fu_595_p1;
        kernelReal_V_15_reg_970 <= kernelReal_V_15_fu_591_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        kernelImg_V_16_reg_985 <= kernelImg_V_16_fu_603_p1;
        kernelReal_V_16_reg_980 <= kernelReal_V_16_fu_599_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        kernelImg_V_17_reg_995 <= kernelImg_V_17_fu_611_p1;
        kernelReal_V_17_reg_990 <= kernelReal_V_17_fu_607_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        kernelImg_V_18_reg_1005 <= kernelImg_V_18_fu_619_p1;
        kernelReal_V_18_reg_1000 <= kernelReal_V_18_fu_615_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        kernelImg_V_19_reg_1015 <= kernelImg_V_19_fu_627_p1;
        kernelReal_V_19_reg_1010 <= kernelReal_V_19_fu_623_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        kernelImg_V_1_reg_835 <= kernelImg_V_1_fu_483_p1;
        kernelReal_V_1_reg_830 <= kernelReal_V_1_fu_479_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        kernelImg_V_20_reg_1025 <= kernelImg_V_20_fu_635_p1;
        kernelReal_V_20_reg_1020 <= kernelReal_V_20_fu_631_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        kernelImg_V_21_reg_1035 <= kernelImg_V_21_fu_643_p1;
        kernelReal_V_21_reg_1030 <= kernelReal_V_21_fu_639_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        kernelImg_V_22_reg_1045 <= kernelImg_V_22_fu_651_p1;
        kernelReal_V_22_reg_1040 <= kernelReal_V_22_fu_647_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        kernelImg_V_23_reg_1055 <= kernelImg_V_23_fu_659_p1;
        kernelReal_V_23_reg_1050 <= kernelReal_V_23_fu_655_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        kernelImg_V_24_reg_1065 <= kernelImg_V_24_fu_667_p1;
        kernelReal_V_24_reg_1060 <= kernelReal_V_24_fu_663_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        kernelImg_V_2_reg_845 <= kernelImg_V_2_fu_491_p1;
        kernelReal_V_2_reg_840 <= kernelReal_V_2_fu_487_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        kernelImg_V_3_reg_855 <= kernelImg_V_3_fu_499_p1;
        kernelReal_V_3_reg_850 <= kernelReal_V_3_fu_495_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        kernelImg_V_4_reg_865 <= kernelImg_V_4_fu_507_p1;
        kernelReal_V_4_reg_860 <= kernelReal_V_4_fu_503_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        kernelImg_V_5_reg_875 <= kernelImg_V_5_fu_515_p1;
        kernelReal_V_5_reg_870 <= kernelReal_V_5_fu_511_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        kernelImg_V_6_reg_885 <= kernelImg_V_6_fu_523_p1;
        kernelReal_V_6_reg_880 <= kernelReal_V_6_fu_519_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        kernelImg_V_7_reg_895 <= kernelImg_V_7_fu_531_p1;
        kernelReal_V_7_reg_890 <= kernelReal_V_7_fu_527_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        kernelImg_V_8_reg_905 <= kernelImg_V_8_fu_539_p1;
        kernelReal_V_8_reg_900 <= kernelReal_V_8_fu_535_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        kernelImg_V_9_reg_915 <= kernelImg_V_9_fu_547_p1;
        kernelReal_V_9_reg_910 <= kernelReal_V_9_fu_543_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        kernelImg_V_reg_825 <= kernelImg_V_fu_475_p1;
        kernelReal_V_reg_820 <= kernelReal_V_fu_471_p1;
    end
end

always @ (*) begin
    if (((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0))) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0))) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0))) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0))) begin
        ap_ST_fsm_state13_blk = 1'b1;
    end else begin
        ap_ST_fsm_state13_blk = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0))) begin
        ap_ST_fsm_state14_blk = 1'b1;
    end else begin
        ap_ST_fsm_state14_blk = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0))) begin
        ap_ST_fsm_state15_blk = 1'b1;
    end else begin
        ap_ST_fsm_state15_blk = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0))) begin
        ap_ST_fsm_state16_blk = 1'b1;
    end else begin
        ap_ST_fsm_state16_blk = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0))) begin
        ap_ST_fsm_state17_blk = 1'b1;
    end else begin
        ap_ST_fsm_state17_blk = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0))) begin
        ap_ST_fsm_state18_blk = 1'b1;
    end else begin
        ap_ST_fsm_state18_blk = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0))) begin
        ap_ST_fsm_state19_blk = 1'b1;
    end else begin
        ap_ST_fsm_state19_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_block_state1_io) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (inputLength_c_full_n == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0))) begin
        ap_ST_fsm_state20_blk = 1'b1;
    end else begin
        ap_ST_fsm_state20_blk = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0))) begin
        ap_ST_fsm_state21_blk = 1'b1;
    end else begin
        ap_ST_fsm_state21_blk = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0))) begin
        ap_ST_fsm_state22_blk = 1'b1;
    end else begin
        ap_ST_fsm_state22_blk = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0))) begin
        ap_ST_fsm_state23_blk = 1'b1;
    end else begin
        ap_ST_fsm_state23_blk = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0))) begin
        ap_ST_fsm_state24_blk = 1'b1;
    end else begin
        ap_ST_fsm_state24_blk = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0))) begin
        ap_ST_fsm_state25_blk = 1'b1;
    end else begin
        ap_ST_fsm_state25_blk = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0))) begin
        ap_ST_fsm_state26_blk = 1'b1;
    end else begin
        ap_ST_fsm_state26_blk = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0))) begin
        ap_ST_fsm_state27_blk = 1'b1;
    end else begin
        ap_ST_fsm_state27_blk = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0))) begin
        ap_ST_fsm_state28_blk = 1'b1;
    end else begin
        ap_ST_fsm_state28_blk = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0))) begin
        ap_ST_fsm_state29_blk = 1'b1;
    end else begin
        ap_ST_fsm_state29_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if (((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0))) begin
        ap_ST_fsm_state30_blk = 1'b1;
    end else begin
        ap_ST_fsm_state30_blk = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0))) begin
        ap_ST_fsm_state31_blk = 1'b1;
    end else begin
        ap_ST_fsm_state31_blk = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0))) begin
        ap_ST_fsm_state32_blk = 1'b1;
    end else begin
        ap_ST_fsm_state32_blk = 1'b0;
    end
end

assign ap_ST_fsm_state33_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state34_io)) begin
        ap_ST_fsm_state34_blk = 1'b1;
    end else begin
        ap_ST_fsm_state34_blk = 1'b0;
    end
end

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

always @ (*) begin
    if (((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0))) begin
        ap_ST_fsm_state41_blk = 1'b1;
    end else begin
        ap_ST_fsm_state41_blk = 1'b0;
    end
end

always @ (*) begin
    if (((grp_computeComplexFIR_fu_272_ap_done == 1'b0) | (imgStream3_full_n == 1'b0) | (realStream2_full_n == 1'b0))) begin
        ap_ST_fsm_state42_blk = 1'b1;
    end else begin
        ap_ST_fsm_state42_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if (((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0))) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0))) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln78_fu_678_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state33))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln78_fu_678_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state33))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        imgIn_blk_n_AR = m_axi_imgIn_ARREADY;
    end else begin
        imgIn_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        imgIn_blk_n_R = m_axi_imgIn_RVALID;
    end else begin
        imgIn_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        imgStream3_blk_n = imgStream3_full_n;
    end else begin
        imgStream3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((grp_computeComplexFIR_fu_272_ap_done == 1'b0) | (imgStream3_full_n == 1'b0) | (realStream2_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state42))) begin
        imgStream3_write = 1'b1;
    end else begin
        imgStream3_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        inputLength_c_blk_n = inputLength_c_full_n;
    end else begin
        inputLength_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state1_io) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (inputLength_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        inputLength_c_write = 1'b1;
    end else begin
        inputLength_c_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state34_io) & (1'b1 == ap_CS_fsm_state34))) begin
        m_axi_imgIn_ARADDR = imgIn_addr_1_reg_1079;
    end else if ((~((1'b1 == ap_block_state1_io) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (inputLength_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_imgIn_ARADDR = sext_ln58_fu_455_p1;
    end else begin
        m_axi_imgIn_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state34_io) & (1'b1 == ap_CS_fsm_state34))) begin
        m_axi_imgIn_ARLEN = 32'd1;
    end else if ((~((1'b1 == ap_block_state1_io) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (inputLength_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_imgIn_ARLEN = 32'd25;
    end else begin
        m_axi_imgIn_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state34_io) & (1'b1 == ap_CS_fsm_state34)) | (~((1'b1 == ap_block_state1_io) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (inputLength_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        m_axi_imgIn_ARVALID = 1'b1;
    end else begin
        m_axi_imgIn_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state41)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state32)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state31)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state30)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state29)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state28)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state27)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state26)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state25)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state24)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state23)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state22)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state21)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state20)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state19)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state18)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state17)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state16)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state15)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state14)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state13)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state12)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state11)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state10)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state9)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state8)))) begin
        m_axi_imgIn_RREADY = 1'b1;
    end else begin
        m_axi_imgIn_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state34_io) & (1'b1 == ap_CS_fsm_state34))) begin
        m_axi_realIn_ARADDR = realIn_addr_1_reg_1073;
    end else if ((~((1'b1 == ap_block_state1_io) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (inputLength_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_realIn_ARADDR = sext_ln57_fu_434_p1;
    end else begin
        m_axi_realIn_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state34_io) & (1'b1 == ap_CS_fsm_state34))) begin
        m_axi_realIn_ARLEN = 32'd1;
    end else if ((~((1'b1 == ap_block_state1_io) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (inputLength_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_realIn_ARLEN = 32'd25;
    end else begin
        m_axi_realIn_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state34_io) & (1'b1 == ap_CS_fsm_state34)) | (~((1'b1 == ap_block_state1_io) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (inputLength_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        m_axi_realIn_ARVALID = 1'b1;
    end else begin
        m_axi_realIn_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state41)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state32)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state31)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state30)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state29)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state28)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state27)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state26)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state25)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state24)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state23)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state22)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state21)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state20)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state19)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state18)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state17)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state16)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state15)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state14)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state13)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state12)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state11)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state10)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state9)) | (~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state8)))) begin
        m_axi_realIn_RREADY = 1'b1;
    end else begin
        m_axi_realIn_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)))) begin
        realIn_blk_n_AR = m_axi_realIn_ARREADY;
    end else begin
        realIn_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8))) begin
        realIn_blk_n_R = m_axi_realIn_RVALID;
    end else begin
        realIn_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        realStream2_blk_n = realStream2_full_n;
    end else begin
        realStream2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((grp_computeComplexFIR_fu_272_ap_done == 1'b0) | (imgStream3_full_n == 1'b0) | (realStream2_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state42))) begin
        realStream2_write = 1'b1;
    end else begin
        realStream2_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((1'b1 == ap_block_state1_io) | (ap_done_reg == 1'b1) | (ap_start == 1'b0) | (inputLength_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if ((~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if ((~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if ((~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if ((~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if ((~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if ((~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if ((~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if ((~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if ((~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if ((~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if ((~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if ((~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if ((~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if ((~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if ((~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            if ((~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            if ((~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            if ((~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if ((~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if ((~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            if ((~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            if ((~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            if ((~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            if ((~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            if ((~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            if (((icmp_ln78_fu_678_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((1'b0 == ap_block_state34_io) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            if ((~((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state42 : begin
            if ((~((grp_computeComplexFIR_fu_272_ap_done == 1'b0) | (imgStream3_full_n == 1'b0) | (realStream2_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln78_fu_683_p2 = (k_fu_180 + 31'd1);

assign add_ln81_1_fu_711_p2 = (zext_ln81_1_fu_707_p1 + inputReal);

assign add_ln81_fu_701_p2 = (zext_ln81_fu_697_p1 + 34'd100);

assign add_ln82_fu_736_p2 = (zext_ln81_1_fu_707_p1 + inputImg);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0) | (inputLength_c_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state10 = ((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state11 = ((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state12 = ((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state13 = ((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state14 = ((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state15 = ((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state16 = ((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state17 = ((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state18 = ((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state19 = ((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state1_io = ((m_axi_realIn_ARREADY == 1'b0) | (m_axi_imgIn_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state20 = ((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state21 = ((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state22 = ((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state23 = ((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state24 = ((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state25 = ((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state26 = ((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state27 = ((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state28 = ((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state29 = ((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state30 = ((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state31 = ((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state32 = ((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state34_io = ((m_axi_realIn_ARREADY == 1'b0) | (m_axi_imgIn_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state41 = ((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state41_ignore_call19 = ((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state42 = ((imgStream3_full_n == 1'b0) | (realStream2_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state42_ignore_call19 = ((imgStream3_full_n == 1'b0) | (realStream2_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state8 = ((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state9 = ((m_axi_imgIn_RVALID == 1'b0) | (m_axi_realIn_RVALID == 1'b0));
end

assign grp_computeComplexFIR_fu_272_ap_start = grp_computeComplexFIR_fu_272_ap_start_reg;

assign icmp_ln78_fu_678_p2 = (($signed(zext_ln78_fu_674_p1) < $signed(filterLength)) ? 1'b1 : 1'b0);

assign imgStream3_din = grp_computeComplexFIR_fu_272_ap_return_1;

assign inTempImg_V_fu_771_p1 = m_axi_imgIn_RDATA[5:0];

assign inTempReal_V_fu_766_p1 = m_axi_realIn_RDATA[5:0];

assign inputLength_c_din = filterLength;

assign kernelImg_V_10_fu_555_p1 = m_axi_imgIn_RDATA[5:0];

assign kernelImg_V_11_fu_563_p1 = m_axi_imgIn_RDATA[5:0];

assign kernelImg_V_12_fu_571_p1 = m_axi_imgIn_RDATA[5:0];

assign kernelImg_V_13_fu_579_p1 = m_axi_imgIn_RDATA[5:0];

assign kernelImg_V_14_fu_587_p1 = m_axi_imgIn_RDATA[5:0];

assign kernelImg_V_15_fu_595_p1 = m_axi_imgIn_RDATA[5:0];

assign kernelImg_V_16_fu_603_p1 = m_axi_imgIn_RDATA[5:0];

assign kernelImg_V_17_fu_611_p1 = m_axi_imgIn_RDATA[5:0];

assign kernelImg_V_18_fu_619_p1 = m_axi_imgIn_RDATA[5:0];

assign kernelImg_V_19_fu_627_p1 = m_axi_imgIn_RDATA[5:0];

assign kernelImg_V_1_fu_483_p1 = m_axi_imgIn_RDATA[5:0];

assign kernelImg_V_20_fu_635_p1 = m_axi_imgIn_RDATA[5:0];

assign kernelImg_V_21_fu_643_p1 = m_axi_imgIn_RDATA[5:0];

assign kernelImg_V_22_fu_651_p1 = m_axi_imgIn_RDATA[5:0];

assign kernelImg_V_23_fu_659_p1 = m_axi_imgIn_RDATA[5:0];

assign kernelImg_V_24_fu_667_p1 = m_axi_imgIn_RDATA[5:0];

assign kernelImg_V_2_fu_491_p1 = m_axi_imgIn_RDATA[5:0];

assign kernelImg_V_3_fu_499_p1 = m_axi_imgIn_RDATA[5:0];

assign kernelImg_V_4_fu_507_p1 = m_axi_imgIn_RDATA[5:0];

assign kernelImg_V_5_fu_515_p1 = m_axi_imgIn_RDATA[5:0];

assign kernelImg_V_6_fu_523_p1 = m_axi_imgIn_RDATA[5:0];

assign kernelImg_V_7_fu_531_p1 = m_axi_imgIn_RDATA[5:0];

assign kernelImg_V_8_fu_539_p1 = m_axi_imgIn_RDATA[5:0];

assign kernelImg_V_9_fu_547_p1 = m_axi_imgIn_RDATA[5:0];

assign kernelImg_V_fu_475_p1 = m_axi_imgIn_RDATA[5:0];

assign kernelReal_V_10_fu_551_p1 = m_axi_realIn_RDATA[5:0];

assign kernelReal_V_11_fu_559_p1 = m_axi_realIn_RDATA[5:0];

assign kernelReal_V_12_fu_567_p1 = m_axi_realIn_RDATA[5:0];

assign kernelReal_V_13_fu_575_p1 = m_axi_realIn_RDATA[5:0];

assign kernelReal_V_14_fu_583_p1 = m_axi_realIn_RDATA[5:0];

assign kernelReal_V_15_fu_591_p1 = m_axi_realIn_RDATA[5:0];

assign kernelReal_V_16_fu_599_p1 = m_axi_realIn_RDATA[5:0];

assign kernelReal_V_17_fu_607_p1 = m_axi_realIn_RDATA[5:0];

assign kernelReal_V_18_fu_615_p1 = m_axi_realIn_RDATA[5:0];

assign kernelReal_V_19_fu_623_p1 = m_axi_realIn_RDATA[5:0];

assign kernelReal_V_1_fu_479_p1 = m_axi_realIn_RDATA[5:0];

assign kernelReal_V_20_fu_631_p1 = m_axi_realIn_RDATA[5:0];

assign kernelReal_V_21_fu_639_p1 = m_axi_realIn_RDATA[5:0];

assign kernelReal_V_22_fu_647_p1 = m_axi_realIn_RDATA[5:0];

assign kernelReal_V_23_fu_655_p1 = m_axi_realIn_RDATA[5:0];

assign kernelReal_V_24_fu_663_p1 = m_axi_realIn_RDATA[5:0];

assign kernelReal_V_2_fu_487_p1 = m_axi_realIn_RDATA[5:0];

assign kernelReal_V_3_fu_495_p1 = m_axi_realIn_RDATA[5:0];

assign kernelReal_V_4_fu_503_p1 = m_axi_realIn_RDATA[5:0];

assign kernelReal_V_5_fu_511_p1 = m_axi_realIn_RDATA[5:0];

assign kernelReal_V_6_fu_519_p1 = m_axi_realIn_RDATA[5:0];

assign kernelReal_V_7_fu_527_p1 = m_axi_realIn_RDATA[5:0];

assign kernelReal_V_8_fu_535_p1 = m_axi_realIn_RDATA[5:0];

assign kernelReal_V_9_fu_543_p1 = m_axi_realIn_RDATA[5:0];

assign kernelReal_V_fu_471_p1 = m_axi_realIn_RDATA[5:0];

assign m_axi_imgIn_ARBURST = 2'd0;

assign m_axi_imgIn_ARCACHE = 4'd0;

assign m_axi_imgIn_ARID = 1'd0;

assign m_axi_imgIn_ARLOCK = 2'd0;

assign m_axi_imgIn_ARPROT = 3'd0;

assign m_axi_imgIn_ARQOS = 4'd0;

assign m_axi_imgIn_ARREGION = 4'd0;

assign m_axi_imgIn_ARSIZE = 3'd0;

assign m_axi_imgIn_ARUSER = 1'd0;

assign m_axi_imgIn_AWADDR = 64'd0;

assign m_axi_imgIn_AWBURST = 2'd0;

assign m_axi_imgIn_AWCACHE = 4'd0;

assign m_axi_imgIn_AWID = 1'd0;

assign m_axi_imgIn_AWLEN = 32'd0;

assign m_axi_imgIn_AWLOCK = 2'd0;

assign m_axi_imgIn_AWPROT = 3'd0;

assign m_axi_imgIn_AWQOS = 4'd0;

assign m_axi_imgIn_AWREGION = 4'd0;

assign m_axi_imgIn_AWSIZE = 3'd0;

assign m_axi_imgIn_AWUSER = 1'd0;

assign m_axi_imgIn_AWVALID = 1'b0;

assign m_axi_imgIn_BREADY = 1'b0;

assign m_axi_imgIn_WDATA = 32'd0;

assign m_axi_imgIn_WID = 1'd0;

assign m_axi_imgIn_WLAST = 1'b0;

assign m_axi_imgIn_WSTRB = 4'd0;

assign m_axi_imgIn_WUSER = 1'd0;

assign m_axi_imgIn_WVALID = 1'b0;

assign m_axi_realIn_ARBURST = 2'd0;

assign m_axi_realIn_ARCACHE = 4'd0;

assign m_axi_realIn_ARID = 1'd0;

assign m_axi_realIn_ARLOCK = 2'd0;

assign m_axi_realIn_ARPROT = 3'd0;

assign m_axi_realIn_ARQOS = 4'd0;

assign m_axi_realIn_ARREGION = 4'd0;

assign m_axi_realIn_ARSIZE = 3'd0;

assign m_axi_realIn_ARUSER = 1'd0;

assign m_axi_realIn_AWADDR = 64'd0;

assign m_axi_realIn_AWBURST = 2'd0;

assign m_axi_realIn_AWCACHE = 4'd0;

assign m_axi_realIn_AWID = 1'd0;

assign m_axi_realIn_AWLEN = 32'd0;

assign m_axi_realIn_AWLOCK = 2'd0;

assign m_axi_realIn_AWPROT = 3'd0;

assign m_axi_realIn_AWQOS = 4'd0;

assign m_axi_realIn_AWREGION = 4'd0;

assign m_axi_realIn_AWSIZE = 3'd0;

assign m_axi_realIn_AWUSER = 1'd0;

assign m_axi_realIn_AWVALID = 1'b0;

assign m_axi_realIn_BREADY = 1'b0;

assign m_axi_realIn_WDATA = 32'd0;

assign m_axi_realIn_WID = 1'd0;

assign m_axi_realIn_WLAST = 1'b0;

assign m_axi_realIn_WSTRB = 4'd0;

assign m_axi_realIn_WUSER = 1'd0;

assign m_axi_realIn_WVALID = 1'b0;

assign realStream2_din = grp_computeComplexFIR_fu_272_ap_return_0;

assign sext_ln57_fu_434_p1 = $signed(trunc_ln_fu_424_p4);

assign sext_ln58_fu_455_p1 = $signed(trunc_ln1_fu_445_p4);

assign sext_ln81_fu_726_p1 = $signed(trunc_ln2_fu_716_p4);

assign sext_ln82_fu_751_p1 = $signed(trunc_ln3_fu_741_p4);

assign shl_ln_fu_689_p3 = {{k_fu_180}, {2'd0}};

assign trunc_ln1_fu_445_p4 = {{inputImg[63:2]}};

assign trunc_ln2_fu_716_p4 = {{add_ln81_1_fu_711_p2[63:2]}};

assign trunc_ln3_fu_741_p4 = {{add_ln82_fu_736_p2[63:2]}};

assign trunc_ln_fu_424_p4 = {{inputReal[63:2]}};

assign zext_ln78_fu_674_p1 = k_fu_180;

assign zext_ln81_1_fu_707_p1 = add_ln81_fu_701_p2;

assign zext_ln81_fu_697_p1 = shl_ln_fu_689_p3;

endmodule //polarFir_complexFIR
